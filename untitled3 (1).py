# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bz2AXNW92LTuWgBXqaoHSZCmtFoOAupG
"""

import pandas as pd

# Create a sample dataset
data = {
    'Plot': [
        'A young wizard attends a school of witchcraft.',
        'A space crew tries to defeat a dark lord.',
        'A romantic story between two people.',
        'A detective solves mysteries in London.',
        'Aliens attack Earth and humans fight back.'
    ],
    'Genre': [
        'Fantasy',
        'Sci-Fi',
        'Romance',
        'Mystery',
        'Action'
    ]
}

# Save as CSV (like real dataset)
df = pd.DataFrame(data)
df.to_csv('IMDb.csv', index=False)

print(" Sample IMDb.csv created successfully!")
df.head()

#  Import necessary libraries
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report, confusion_matrix

#  Load the sample dataset
df = pd.read_csv("IMDb.csv")

#  Clean the data
df.dropna(inplace=True)

#  Define features and target
X = df['Plot']
y = df['Genre']

# TF-IDF Vectorization
vectorizer = TfidfVectorizer(stop_words='english', max_features=500)
X_tfidf = vectorizer.fit_transform(X)

#  Train-test split
X_train, X_test, y_train, y_test = train_test_split(X_tfidf, y, test_size=0.2, random_state=42)

#  Train the model
model = MultinomialNB()
model.fit(X_train, y_train)

#  Predict and evaluate
y_pred = model.predict(X_test)
print("\n Classification Report:\n")
print(classification_report(y_test, y_pred))

#  Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8,5))
sns.heatmap(cm, annot=True, cmap='Blues', fmt='d', xticklabels=model.classes_, yticklabels=model.classes_)
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()
